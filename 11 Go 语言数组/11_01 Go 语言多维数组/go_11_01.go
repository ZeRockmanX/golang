package main // Go 语言多维数组
/* Go 语言提供了数组类型的数据结构。
var variable_name [SIZE1][SIZE2]...[SIZEN] variable_type
以下实例声明了三维的整型数组：
var threedim [5][10][4]int
*/
// ------------------------------------------------------------------------------------------------------------------------
/* 初始化二维数组
多维数组可通过大括号来初始值。以下实例为一个 3 行 4 列的二维数组：
a = [3][4]int{
 {0, 1, 2, 3} ,   // 第一行索引为 0
 {4, 5, 6, 7} ,   //  第二行索引为 1
 {8, 9, 10, 11},  // 第三行索引为 2
}
*****注意：以上代码中倒数第二行的 } 必须要有逗号，因为最后一行的 } 不能单独一行，也可以写成这样：
a = [3][4]int{
 {0, 1, 2, 3} ,   // 第一行索引为 0
 {4, 5, 6, 7} ,   // 第二行索引为 1
 {8, 9, 10, 11}}  // 第三行索引为 2
*/
// ------------------------------------------------------------------------------------------------------------------------
/* 访问二维数组
二维数组通过指定坐标来访问。如数组中的行索引与列索引，例如：
val := a[2][3]
或
var value int = a[2][3]
*/
// ------------------------------------------------------------------------------------------------------------------------

import "fmt"

func main() {
	/* 数组 - 5 行 2 列 ！！！注 实际索引是0 - 4 和 0 - 1*/
	var a = [5][2]int{{0, 0}}
	var i, j int

	/* 输出数组元素 */
	for i = 0; i < 5; i++ {
		for j = 0; j < 2; j++ {
			fmt.Printf("a[%d][%d] = %d\n", i, j, a[i][j])
		}
	}
}
